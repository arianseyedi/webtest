* Design to be:
-responsive
-Mobile first
-Fluid: automatically adapting to screen width
* CSS Flexbox layout:
easy vertical alignment with parent element
download bootstrap
_______________________________________________________
Navigation:
Breadcrumbs:
ex: Home > Menu > Appetizers
Indicate current page's location in 3 ways:
-path based: set of steps
-location based: hierarchy
-attribute based: set of choices
Navigation aids:
tabs, pills, pagination, dropdowns, accordion, tags, Affix

_______________________________________________________
Icon Fonts: (i.e. simple graphics)
can be styled just like texts (scale, color, font, etc.)
download FontAwesome and bootstrap-social

_______________________________________________________
Buttons and forms

_______________________________________________________
Tables cards:
use of bootstrap tables/cards to display table content.

_______________________________________________________
Images/Media:

Use Bootstrap cards to do so.
Use media objects to manage media + some text.

_______________________________________________________
Alerting Users:
Badge : badge class/ badge-danger / badge-pill
Alerts : alert class/ alert-warning alert-dismissible
Progress bar: progress-bar / progress-bar-striped bg-danger

_______________________________________________________
Accordion and Other collapsible elements

use cards and nav-items to accomplish that

_______________________________________________________
Tooltips: guidance/hover info,
Popovers: guidance upon first click.
Modals: more detailed info like alert in js or login overlay
screens that can be exited by clicking outside that area.

_______________________________________________________
Carousel: allows a slide-show, can also manually slide items e.g., left/right

_______________________________________________________
jQuery Syntax:

$(selector).action()
$ defines/access jquery
selector: to query and find HTML elements
-action(): action to be performed on the elements
-e.g. $("p").hide(), $('#mycarousel').carousel('pause')

** any HTML element e.g. "p", "div", "button"
** using #id, e.g. '#myID'
** class, e.g. ".btn", ".btn.btn-default"
** attribute, e.g., "[href]", "[data-toggle=tooltip]"
** current element: $(this)
** Events:
  mouse clicks, double clicks,
  keyboard,
  form: submit, change, focus, blur
  doc/window: resize, load

_______________________________________________________
Sass/Less: CSS Pre-Processors
Variables, nesting selectors, mix-ins, funcs/expressions for CSS!

*mix-ins: group of variables using (can use mathematical operations on )
*mix-ins with parameters: use mix-ins that take parameters
(just like functions) *Functions: math, list, string, color

_______________________________________________________
DEPLOYMENT:

-steps beforehand: (need build tools to automate tasks)
  * autoprefixing: to add any vendor prefixes that are needed
  * minification: removing unnecessary characters, reducing characters
    (e.g. variable name lengths) to reduce processing times
  * cocatenation: binding, say, multiple css files into one so that
    the user needs to dl one file only.
  * rechecking for errors (static code analysis)
  Other:
  * Images: optimizing files
  * Watch: for changes in files and automatically running tasks
  * Server and Liverload
  * Testing
  * Building your site for deployment
